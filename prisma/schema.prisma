datasource db {
	provider = "postgresql"
	url = env("DATABASE_URL")
}

generator client {
	provider = "prisma-client-js"
}

model Book {
	identifier String @id @default(uuid())
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
	title String 
	author String 
	language String 
	image String? 
	description String? 
	isbn String? 
	publishYear DateTime? 
	genres Json 
	tags Json 
	isAvailable Boolean @default(true)
	isReserved Boolean @default(false)
	ownerId String 
	owner User? @relation(name: "owning", fields: [ownerId], references: [identifier])
	borrowerId String? 
	borrower User? @relation(name: "borrowing", fields: [borrowerId], references: [identifier])
	borrowDate DateTime? 
	location Location? @relation(name: "booklocation", fields: [locationId], references: [identifier])
	locationId String? 
}

model User {
	identifier String @id @default(uuid())
	booksBorrowed Book[] @relation(name: "borrowing")
	booksOwned Book[] @relation(name: "owning")
	locations Location[] @relation(name: "userlocations")
	name String? 
	image String? 
	username String 
	telegramId String 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Location {
  identifier String @id @default(uuid())
	books Book[] @relation(name: "booklocation")
	createdAt DateTime @default(now())
	postalAddressCountry String? 
	postalAddressRegion String? 
	postalAddressPostalCode Int? 
	postalAddressStreetAddress String? 
	latitude Float 
	longitude Float 
	userId String 
	user User @relation(name: "userlocations", fields: [userId], references: [identifier], onDelete: Cascade)
}