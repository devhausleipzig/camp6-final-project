model User {
  identifier String @id @default(uuid())
	booksBorrowed Book[] @relation(name: "borrowing")
	booksOwned Book[] @relation(name: "owning")
	locations Location[] @relation(name: "userlocations")
	name String? 
	image String? 
	username String 
	telegramId String 
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt
}

model Book {
  identifier String  @id @default(uuid())
  ownerId    String
  owner      User?   @relation("owning", fields: [ownerId], references: [identifier])
  borrowerId String?
  borrower   User?   @relation("borrowing", fields: [borrowerId], references: [identifier])
}

model Location {
  identifier           String    @id
	userId String 
	user User @relation(name: "userlocations", fields: [userId], references: [identifier], onDelete: Cascade)
}